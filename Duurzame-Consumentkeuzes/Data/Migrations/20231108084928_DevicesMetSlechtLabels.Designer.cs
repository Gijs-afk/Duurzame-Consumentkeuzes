// <auto-generated />
using System;
using Duurzame_Consumentkeuzes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Duurzame_Consumentkeuzes.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231108084928_DevicesMetSlechtLabels")]
    partial class DevicesMetSlechtLabels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerDevice", b =>
                {
                    b.Property<string>("CustomersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DevicesId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "DevicesId");

                    b.HasIndex("DevicesId");

                    b.ToTable("CustomerDevice");
                });

            modelBuilder.Entity("CustomerEnergyLabel", b =>
                {
                    b.Property<string>("CustomersId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EnergyLabelsId")
                        .HasColumnType("int");

                    b.HasKey("CustomersId", "EnergyLabelsId");

                    b.HasIndex("EnergyLabelsId");

                    b.ToTable("CustomerEnergyLabel");
                });

            modelBuilder.Entity("Duurzame_Consumentkeuzes.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<decimal?>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "372725a0-0897-4dd1-a77a-0f9cce9ca7ad",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4362d8af-34dc-4ceb-935e-c1a43a4dbf21",
                            Email = "admin@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@EXAMPLE.COM",
                            NormalizedUserName = "ADMIN@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEMoS3lJT8W+9agsUYZ/WIB/U4uehw46WYn2qV122XCRVdEJJXLinAgD66q8eCvC31w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cbb41e36-9fc2-414a-b69b-8888d190f964",
                            TwoFactorEnabled = false,
                            UserName = "admin@example.com"
                        },
                        new
                        {
                            Id = "7fe63ab2-9fd0-4fea-91f2-29ca0253014b",
                            AccessFailedCount = 0,
                            Budget = 450m,
                            ConcurrencyStamp = "075c91ea-ab70-4053-b7a7-e3f40dbef202",
                            Email = "bruce@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "BRUCE@EXAMPLE.COM",
                            NormalizedUserName = "BRUCE@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAWv7Krz44EcaoTS2qGjQ0R3/idxhbKsjYQHU3tqm+TqEEqYo1imEN9dUu0bcomnKQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "390095ad-6aec-4348-8d83-b46e9dd4639b",
                            TwoFactorEnabled = false,
                            UserName = "bruce@example.com"
                        },
                        new
                        {
                            Id = "33883584-cad2-4374-8201-c33433cf4d62",
                            AccessFailedCount = 0,
                            Budget = 500m,
                            ConcurrencyStamp = "d4fb84f4-335c-408a-8e6c-e374a4391f46",
                            Email = "gijs@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GIJS@EXAMPLE.COM",
                            NormalizedUserName = "GIJS@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAGWaZouU5juXzIZhpe9A7NcZ47bMcwwNp9Ot30sSh8riir8P2HJdRTyHT6/+VA1cw==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "aa4eb2f2-b486-4916-9680-8867476fffd0",
                            TwoFactorEnabled = false,
                            UserName = "gijs@example.com"
                        },
                        new
                        {
                            Id = "c16c8284-ab95-4bde-a6ef-9f794adb1c06",
                            AccessFailedCount = 0,
                            Budget = 650m,
                            ConcurrencyStamp = "77c5576f-8ec3-413a-ae45-bb95fa72a806",
                            Email = "rick@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "RICK@EXAMPLE.COM",
                            NormalizedUserName = "RICK@EXAMPLE.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEDDKdc0kHHAUDcAY/CMexJiqpK9/QN5N/fRloORy0r3S+zSGLC/68W1N9AI7kYKQ8A==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6d014bcb-7f29-4bca-a852-6108d73d2409",
                            TwoFactorEnabled = false,
                            UserName = "rick@example.com"
                        });
                });

            modelBuilder.Entity("Duurzame_Consumentkeuzes.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BuildDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnergyLabelId")
                        .HasColumnType("int");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnergyLabelId");

                    b.ToTable("Devices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Haier",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/haier-hw90-b14959u1.png",
                            Name = "Haier HW90 B14959U1",
                            Price = 599m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Samsung",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/samsung-ww90t534aaw.png",
                            Name = "Samsung WW90T534AAW",
                            Price = 649m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 3,
                            Brand = "Bosch",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/bosch-serie-4-wgg04409nl.png",
                            Name = "Bosch Serie | 4 WGG04409NL",
                            Price = 699m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 4,
                            Brand = "AEG",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/aeg-lr6berlin.png",
                            Name = "AEG LR6BERLIN",
                            Price = 649m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 5,
                            Brand = "Siemens",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/siemens-iq700-wg56b2a5nl.png",
                            Name = "Siemens IQ700 WG56B2A5NL",
                            Price = 1099m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 6,
                            Brand = "Bosch",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/bosch-serie-6-wau28p95nl.png",
                            Name = "Bosch Serie | 6 WAU28P95NL",
                            Price = 875m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 7,
                            Brand = "Siemens",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/siemens-iq300-wm14n297nl.png",
                            Name = "Siemens IQ300 WM14N297NL",
                            Price = 779m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 8,
                            Brand = "Beko",
                            EnergyLabelId = 3,
                            ImagePath = "/images/devices/wasmachines/beko-wtv8712blw1.png",
                            Name = "Beko WTV8712BLW1",
                            Price = 399m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 9,
                            Brand = "Whirlpool",
                            EnergyLabelId = 2,
                            ImagePath = "/images/devices/wasmachines/whirlpool-ffb-9458-wv-be.png",
                            Name = "Whirlpool FFB 9458 WV BE",
                            Price = 403m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 10,
                            Brand = "Beko",
                            EnergyLabelId = 3,
                            ImagePath = "/images/devices/wasmachines/beko-wtv8711bc1.png",
                            Name = "Beko WTV8711BC1",
                            Price = 429m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 11,
                            Brand = "Bosch",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/bosch-serie-6-kgn39aiat.png",
                            Name = "Bosch Serie | 6 KGN39AIAT",
                            Price = 1249m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 12,
                            Brand = "Siemens",
                            EnergyLabelId = 2,
                            ImagePath = "/images/devices/koelkasten/siemens-kg39e8xba.png",
                            Name = "Siemens KG39E8XBA",
                            Price = 839m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 13,
                            Brand = "LG",
                            EnergyLabelId = 2,
                            ImagePath = "/images/devices/koelkasten/lg-gbp62pznbc.png",
                            Name = "LG GBP62PZNBC",
                            Price = 1009m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 14,
                            Brand = "LG",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/lg-gbb92stbap.png",
                            Name = "LG GBB92STBAP",
                            Price = 1378m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 15,
                            Brand = "Siemens",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/siemens-iq500-kg39naiat.png",
                            Name = "Siemens IQ500 KG39NAIAT",
                            Price = 1399m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 16,
                            Brand = "Etna",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/etna-kks4088.png",
                            Name = "Etna KKS4088",
                            Price = 348m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 17,
                            Brand = "Siemens",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/siemens-ku15raff0.png",
                            Name = "Siemens KU15RAFF0",
                            Price = 576m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 18,
                            Brand = "Siemens",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/siemens-ki51fade0.png",
                            Name = "Siemens KI51FADE0",
                            Price = 893.36m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 19,
                            Brand = "Etna",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/etna-kkd4122.png",
                            Name = "Etna KKD4122 ",
                            Price = 499m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 20,
                            Brand = "Bosch",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/koelkasten/bosch-ksv33vlep.png",
                            Name = "Bosch KSV33VLEP",
                            Price = 719m,
                            Type = "Koelkast"
                        },
                        new
                        {
                            Id = 21,
                            Brand = "AEG",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/aeg-lwr7796ud6.png",
                            Name = "AEG LWR7796UD6",
                            Price = 1249m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 22,
                            Brand = "Samsung",
                            EnergyLabelId = 1,
                            ImagePath = "/images/devices/wasmachines/samsung-bespoke-autodose-5000-serie-ww11bb534aabs2.png",
                            Name = "Samsung Bespoke Autodose 5000 serie WW11BB534AABS2",
                            Price = 749m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 23,
                            Brand = "Bosch",
                            EnergyLabelId = 5,
                            ImagePath = "/images/devices/wasmachines/bosch-wna14420nl.png",
                            Name = "Bosch WNA14420NL",
                            Price = 898m,
                            Type = "Wasmachine"
                        },
                        new
                        {
                            Id = 24,
                            Brand = "AEG",
                            EnergyLabelId = 6,
                            ImagePath = "/images/devices/wasmachines/aeg-l6tb62k.png",
                            Name = "AEG L6TB62K",
                            Price = 599m,
                            Type = "Wasmachine"
                        });
                });

            modelBuilder.Entity("Duurzame_Consumentkeuzes.Models.EnergyLabel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("EfficiencyClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EnergyLabels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EfficiencyClass = "A",
                            ImagePath = "/images/energylabels/energylabela.png"
                        },
                        new
                        {
                            Id = 2,
                            EfficiencyClass = "B",
                            ImagePath = "/images/energylabels/energylabelb.png"
                        },
                        new
                        {
                            Id = 3,
                            EfficiencyClass = "C",
                            ImagePath = "/images/energylabels/energylabelc.png"
                        },
                        new
                        {
                            Id = 4,
                            EfficiencyClass = "D",
                            ImagePath = "/images/energylabels/energylabeld.png"
                        },
                        new
                        {
                            Id = 5,
                            EfficiencyClass = "E",
                            ImagePath = "/images/energylabels/energylabele.png"
                        },
                        new
                        {
                            Id = 6,
                            EfficiencyClass = "F",
                            ImagePath = "/images/energylabels/energylabelf.png"
                        },
                        new
                        {
                            Id = 7,
                            EfficiencyClass = "G",
                            ImagePath = "/images/energylabels/energylabelg.png"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "e0f4adb4-8c3d-45ff-a814-62c3c873fba5",
                            Name = "Administrators",
                            NormalizedName = "ADMINISTRATORS"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "372725a0-0897-4dd1-a77a-0f9cce9ca7ad",
                            RoleId = "e0f4adb4-8c3d-45ff-a814-62c3c873fba5"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CustomerDevice", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duurzame_Consumentkeuzes.Models.Device", null)
                        .WithMany()
                        .HasForeignKey("DevicesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CustomerEnergyLabel", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duurzame_Consumentkeuzes.Models.EnergyLabel", null)
                        .WithMany()
                        .HasForeignKey("EnergyLabelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duurzame_Consumentkeuzes.Models.Device", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.EnergyLabel", "EnergyLabel")
                        .WithMany("Devices")
                        .HasForeignKey("EnergyLabelId");

                    b.Navigation("EnergyLabel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Duurzame_Consumentkeuzes.Models.Customer", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Duurzame_Consumentkeuzes.Models.EnergyLabel", b =>
                {
                    b.Navigation("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
