@model IEnumerable<Duurzame_Consumentkeuzes.Models.Device>

@{
    ViewData["Title"] = "Index";
}

<h1>Apparaten</h1>
<p>Op deze pagina vindt u een door ons aanbevolen assortiment aan huishoudelijke apparaten!</p>
<br />

<form asp-controller="Devices" asp-action="Index" method="get" class="filterSection">
    <div class="form-group">
        <label for="energyLabelId">Minimaal Energy Label:</label>
        <select id="energyLabelId" name="energyLabelId">
            <option value="">Any</option>
            <option value="1">A</option>
            <option value="2">B</option>
            <option value="3">C</option>
            <option value="4">D</option>
            <option value="5">E</option>
            <option value="6">F</option>
            <option value="7">G</option>
        </select>
    </div>

    <div class="form-group">
        <label for="type">Filter op type apparaat:</label>
        <select id="type" name="type">
            <option value="">alle</option>
            @foreach (var deviceType in ViewBag.Type)
            {
                <option value="@deviceType">@deviceType</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="brand">Filter op merk:</label>
        <select id="brand" name="brand">
            <option value="">alle</option>
            @foreach (var brand in ViewBag.Brands)
            {
                <option value="@brand">@brand</option>
            }
        </select>
    </div>

    <p>Je budget is: @ViewBag.UserBudget</p>



    <button class="btn btn-primary custom-btn" type="submit">Apply Filters</button>
</form>


<form asp-controller="Devices" asp-action="Index" method="get">
    <input type="hidden" name="showAll" value="true" />
    <button class="btn btn-primary custom-btn pd-top" type="submit">Laat alle apparaten zien</button>
</form>



@{
    List<string> types = new List<string>();
    foreach (var item in Model)
    {
        if (!types.Contains(item.Type))
        {
            types.Add(item.Type);
        }
    }
    foreach (string type in types)
    {
        <h2>@type</h2>
        
        List<Device> devices = new List<Device>();
        foreach (var item in Model)
        {
            if (item.Type == type)
            {
                devices.Add(item);
            }
        }
        <p>Aantal: @devices.Count()</p>

        <table*>
            @{
                int rowCount = (int)Math.Ceiling(((double)devices.Count() / 5));
                for (int r = rowCount; r > 0; r--)
                {
                    <tr>
                        @for (int i = 0; i < 5; i++)
                        {
                            @if (devices.Count == 0)
                            {
                                <td></td>
                            }

                            else
                            {
                                <td>
                                    <table>
                                        <tr>
                                            <td>
                                                <img src="@devices[devices.Count() - 1].ImagePath" class="deviceImage">
                                            </td>
                                            <td>
                                                @devices[devices.Count() - 1].Name <br />
                                                Energieklasse: <img src="@devices[devices.Count() - 1].EnergyLabel.ImagePath"> <br />
                                                Prijs: €@devices[devices.Count() - 1].Price
                                            </td>
                                        </tr>
                                    </table>
                                </td>
                                devices.RemoveAt(devices.Count() - 1);
                            }                                                                          
                        }                        
                    </tr>
                }
            }                          
        </table*>
        <br />
    }
}